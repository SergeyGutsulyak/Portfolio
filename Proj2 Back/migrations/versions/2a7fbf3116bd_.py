"""empty message

Revision ID: 2a7fbf3116bd
Revises: 
Create Date: 2018-07-06 18:47:05.401755

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2a7fbf3116bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('citys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('countrys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('universitys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('facultys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['universitys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('screen_name', sa.String(length=100), nullable=True),
    sa.Column('is_closed', sa.Integer(), nullable=True),
    sa.Column('deactivated', sa.String(length=50), nullable=True),
    sa.Column('is_admin', sa.Integer(), nullable=True),
    sa.Column('type_gr', sa.String(length=50), nullable=True),
    sa.Column('photo_50', sa.String(length=255), nullable=True),
    sa.Column('photo_100', sa.String(length=255), nullable=True),
    sa.Column('photo_200', sa.String(length=255), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('contacts', sa.PickleType(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('on_scan', sa.Integer(), nullable=True),
    sa.Column('last_scan', sa.DateTime(), nullable=True),
    sa.Column('period_scan', sa.Integer(), nullable=True),
    sa.Column('start_scan_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['citys.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['countrys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('deactivated', sa.String(length=50), nullable=True),
    sa.Column('activities', sa.String(length=1024), nullable=True),
    sa.Column('bdate', sa.String(length=100), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('skype', sa.String(length=100), nullable=True),
    sa.Column('facebook', sa.String(length=100), nullable=True),
    sa.Column('twitter', sa.String(length=100), nullable=True),
    sa.Column('livejournal', sa.String(length=100), nullable=True),
    sa.Column('instagram', sa.String(length=100), nullable=True),
    sa.Column('followers_count', sa.Integer(), nullable=True),
    sa.Column('mobile_phone', sa.String(length=50), nullable=True),
    sa.Column('home_phone', sa.String(length=50), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.Column('graduation', sa.Integer(), nullable=True),
    sa.Column('domain', sa.String(length=100), nullable=True),
    sa.Column('home_town', sa.String(length=100), nullable=True),
    sa.Column('last_seen_time', sa.Integer(), nullable=True),
    sa.Column('last_seen_platform', sa.Integer(), nullable=True),
    sa.Column('sex', sa.Integer(), nullable=True),
    sa.Column('relation', sa.Integer(), nullable=True),
    sa.Column('relation_partner', sa.Integer(), nullable=True),
    sa.Column('maiden_name', sa.String(length=100), nullable=True),
    sa.Column('nickname', sa.String(length=100), nullable=True),
    sa.Column('occupation_type', sa.String(length=20), nullable=True),
    sa.Column('occupation_id', sa.Integer(), nullable=True),
    sa.Column('occupation_name', sa.String(length=255), nullable=True),
    sa.Column('verified', sa.Integer(), nullable=True),
    sa.Column('site', sa.String(length=200), nullable=True),
    sa.Column('photo_50', sa.String(length=100), nullable=True),
    sa.Column('photo_100', sa.String(length=100), nullable=True),
    sa.Column('photo_200', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['citys.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['countrys.id'], ),
    sa.ForeignKeyConstraint(['faculty_id'], ['facultys.id'], ),
    sa.ForeignKeyConstraint(['university_id'], ['universitys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('member_add',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('member_del',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('members',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('members')
    op.drop_table('member_del')
    op.drop_table('member_add')
    op.drop_table('users')
    op.drop_table('groups')
    op.drop_table('facultys')
    op.drop_table('universitys')
    op.drop_table('countrys')
    op.drop_table('citys')
    # ### end Alembic commands ###
